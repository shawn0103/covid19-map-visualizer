{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QuoteType = void 0;\nvar decode_js_1 = require(\"entities/lib/decode.js\");\nvar CharCodes;\n(function (CharCodes) {\n  CharCodes[CharCodes[\"Tab\"] = 9] = \"Tab\";\n  CharCodes[CharCodes[\"NewLine\"] = 10] = \"NewLine\";\n  CharCodes[CharCodes[\"FormFeed\"] = 12] = \"FormFeed\";\n  CharCodes[CharCodes[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n  CharCodes[CharCodes[\"Space\"] = 32] = \"Space\";\n  CharCodes[CharCodes[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n  CharCodes[CharCodes[\"Num\"] = 35] = \"Num\";\n  CharCodes[CharCodes[\"Amp\"] = 38] = \"Amp\";\n  CharCodes[CharCodes[\"SingleQuote\"] = 39] = \"SingleQuote\";\n  CharCodes[CharCodes[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n  CharCodes[CharCodes[\"Dash\"] = 45] = \"Dash\";\n  CharCodes[CharCodes[\"Slash\"] = 47] = \"Slash\";\n  CharCodes[CharCodes[\"Zero\"] = 48] = \"Zero\";\n  CharCodes[CharCodes[\"Nine\"] = 57] = \"Nine\";\n  CharCodes[CharCodes[\"Semi\"] = 59] = \"Semi\";\n  CharCodes[CharCodes[\"Lt\"] = 60] = \"Lt\";\n  CharCodes[CharCodes[\"Eq\"] = 61] = \"Eq\";\n  CharCodes[CharCodes[\"Gt\"] = 62] = \"Gt\";\n  CharCodes[CharCodes[\"Questionmark\"] = 63] = \"Questionmark\";\n  CharCodes[CharCodes[\"UpperA\"] = 65] = \"UpperA\";\n  CharCodes[CharCodes[\"LowerA\"] = 97] = \"LowerA\";\n  CharCodes[CharCodes[\"UpperF\"] = 70] = \"UpperF\";\n  CharCodes[CharCodes[\"LowerF\"] = 102] = \"LowerF\";\n  CharCodes[CharCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n  CharCodes[CharCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n  CharCodes[CharCodes[\"LowerX\"] = 120] = \"LowerX\";\n  CharCodes[CharCodes[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})(CharCodes || (CharCodes = {}));\n/** All the states the tokenizer can be in. */\nvar State;\n(function (State) {\n  State[State[\"Text\"] = 1] = \"Text\";\n  State[State[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n  State[State[\"InTagName\"] = 3] = \"InTagName\";\n  State[State[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n  State[State[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n  State[State[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n  State[State[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n  // Attributes\n  State[State[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n  State[State[\"InAttributeName\"] = 9] = \"InAttributeName\";\n  State[State[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n  State[State[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n  State[State[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n  State[State[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n  State[State[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n  // Declarations\n  State[State[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n  State[State[\"InDeclaration\"] = 16] = \"InDeclaration\";\n  // Processing instructions\n  State[State[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n  // Comments & CDATA\n  State[State[\"BeforeComment\"] = 18] = \"BeforeComment\";\n  State[State[\"CDATASequence\"] = 19] = \"CDATASequence\";\n  State[State[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n  State[State[\"InCommentLike\"] = 21] = \"InCommentLike\";\n  // Special tags\n  State[State[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n  State[State[\"SpecialStartSequence\"] = 23] = \"SpecialStartSequence\";\n  State[State[\"InSpecialTag\"] = 24] = \"InSpecialTag\";\n  State[State[\"BeforeEntity\"] = 25] = \"BeforeEntity\";\n  State[State[\"BeforeNumericEntity\"] = 26] = \"BeforeNumericEntity\";\n  State[State[\"InNamedEntity\"] = 27] = \"InNamedEntity\";\n  State[State[\"InNumericEntity\"] = 28] = \"InNumericEntity\";\n  State[State[\"InHexEntity\"] = 29] = \"InHexEntity\";\n})(State || (State = {}));\nfunction isWhitespace(c) {\n  return c === CharCodes.Space || c === CharCodes.NewLine || c === CharCodes.Tab || c === CharCodes.FormFeed || c === CharCodes.CarriageReturn;\n}\nfunction isEndOfTagSection(c) {\n  return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c);\n}\nfunction isNumber(c) {\n  return c >= CharCodes.Zero && c <= CharCodes.Nine;\n}\nfunction isASCIIAlpha(c) {\n  return c >= CharCodes.LowerA && c <= CharCodes.LowerZ || c >= CharCodes.UpperA && c <= CharCodes.UpperZ;\n}\nfunction isHexDigit(c) {\n  return c >= CharCodes.UpperA && c <= CharCodes.UpperF || c >= CharCodes.LowerA && c <= CharCodes.LowerF;\n}\nvar QuoteType;\n(function (QuoteType) {\n  QuoteType[QuoteType[\"NoValue\"] = 0] = \"NoValue\";\n  QuoteType[QuoteType[\"Unquoted\"] = 1] = \"Unquoted\";\n  QuoteType[QuoteType[\"Single\"] = 2] = \"Single\";\n  QuoteType[QuoteType[\"Double\"] = 3] = \"Double\";\n})(QuoteType = exports.QuoteType || (exports.QuoteType = {}));\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */\nvar Sequences = {\n  Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]),\n  CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]),\n  CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]),\n  ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]),\n  StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]),\n  TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]) // `</title`\n};\n\nvar Tokenizer = /** @class */function () {\n  function Tokenizer(_a, cbs) {\n    var _b = _a.xmlMode,\n      xmlMode = _b === void 0 ? false : _b,\n      _c = _a.decodeEntities,\n      decodeEntities = _c === void 0 ? true : _c;\n    this.cbs = cbs;\n    /** The current state the tokenizer is in. */\n    this.state = State.Text;\n    /** The read buffer. */\n    this.buffer = \"\";\n    /** The beginning of the section that is currently being read. */\n    this.sectionStart = 0;\n    /** The index within the buffer that we are currently looking at. */\n    this.index = 0;\n    /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n    this.baseState = State.Text;\n    /** For special parsing behavior inside of script and style tags. */\n    this.isSpecial = false;\n    /** Indicates whether the tokenizer has been paused. */\n    this.running = true;\n    /** The offset of the current buffer. */\n    this.offset = 0;\n    this.sequenceIndex = 0;\n    this.trieIndex = 0;\n    this.trieCurrent = 0;\n    /** For named entities, the index of the value. For numeric entities, the code point. */\n    this.entityResult = 0;\n    this.entityExcess = 0;\n    this.xmlMode = xmlMode;\n    this.decodeEntities = decodeEntities;\n    this.entityTrie = xmlMode ? decode_js_1.xmlDecodeTree : decode_js_1.htmlDecodeTree;\n  }\n  Tokenizer.prototype.reset = function () {\n    this.state = State.Text;\n    this.buffer = \"\";\n    this.sectionStart = 0;\n    this.index = 0;\n    this.baseState = State.Text;\n    this.currentSequence = undefined;\n    this.running = true;\n    this.offset = 0;\n  };\n  Tokenizer.prototype.write = function (chunk) {\n    this.offset += this.buffer.length;\n    this.buffer = chunk;\n    this.parse();\n  };\n  Tokenizer.prototype.end = function () {\n    if (this.running) this.finish();\n  };\n  Tokenizer.prototype.pause = function () {\n    this.running = false;\n  };\n  Tokenizer.prototype.resume = function () {\n    this.running = true;\n    if (this.index < this.buffer.length + this.offset) {\n      this.parse();\n    }\n  };\n  /**\n   * The current index within all of the written data.\n   */\n  Tokenizer.prototype.getIndex = function () {\n    return this.index;\n  };\n  /**\n   * The start of the current section.\n   */\n  Tokenizer.prototype.getSectionStart = function () {\n    return this.sectionStart;\n  };\n  Tokenizer.prototype.stateText = function (c) {\n    if (c === CharCodes.Lt || !this.decodeEntities && this.fastForwardTo(CharCodes.Lt)) {\n      if (this.index > this.sectionStart) {\n        this.cbs.ontext(this.sectionStart, this.index);\n      }\n      this.state = State.BeforeTagName;\n      this.sectionStart = this.index;\n    } else if (this.decodeEntities && c === CharCodes.Amp) {\n      this.state = State.BeforeEntity;\n    }\n  };\n  Tokenizer.prototype.stateSpecialStartSequence = function (c) {\n    var isEnd = this.sequenceIndex === this.currentSequence.length;\n    var isMatch = isEnd ?\n    // If we are at the end of the sequence, make sure the tag name has ended\n    isEndOfTagSection(c) :\n    // Otherwise, do a case-insensitive comparison\n    (c | 0x20) === this.currentSequence[this.sequenceIndex];\n    if (!isMatch) {\n      this.isSpecial = false;\n    } else if (!isEnd) {\n      this.sequenceIndex++;\n      return;\n    }\n    this.sequenceIndex = 0;\n    this.state = State.InTagName;\n    this.stateInTagName(c);\n  };\n  /** Look for an end tag. For <title> tags, also decode entities. */\n  Tokenizer.prototype.stateInSpecialTag = function (c) {\n    if (this.sequenceIndex === this.currentSequence.length) {\n      if (c === CharCodes.Gt || isWhitespace(c)) {\n        var endOfText = this.index - this.currentSequence.length;\n        if (this.sectionStart < endOfText) {\n          // Spoof the index so that reported locations match up.\n          var actualIndex = this.index;\n          this.index = endOfText;\n          this.cbs.ontext(this.sectionStart, endOfText);\n          this.index = actualIndex;\n        }\n        this.isSpecial = false;\n        this.sectionStart = endOfText + 2; // Skip over the `</`\n        this.stateInClosingTagName(c);\n        return; // We are done; skip the rest of the function.\n      }\n\n      this.sequenceIndex = 0;\n    }\n    if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\n      this.sequenceIndex += 1;\n    } else if (this.sequenceIndex === 0) {\n      if (this.currentSequence === Sequences.TitleEnd) {\n        // We have to parse entities in <title> tags.\n        if (this.decodeEntities && c === CharCodes.Amp) {\n          this.state = State.BeforeEntity;\n        }\n      } else if (this.fastForwardTo(CharCodes.Lt)) {\n        // Outside of <title> tags, we can fast-forward.\n        this.sequenceIndex = 1;\n      }\n    } else {\n      // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n      this.sequenceIndex = Number(c === CharCodes.Lt);\n    }\n  };\n  Tokenizer.prototype.stateCDATASequence = function (c) {\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\n        this.state = State.InCommentLike;\n        this.currentSequence = Sequences.CdataEnd;\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n      }\n    } else {\n      this.sequenceIndex = 0;\n      this.state = State.InDeclaration;\n      this.stateInDeclaration(c); // Reconsume the character\n    }\n  };\n  /**\n   * When we wait for one specific character, we can speed things up\n   * by skipping through the buffer until we find it.\n   *\n   * @returns Whether the character was found.\n   */\n  Tokenizer.prototype.fastForwardTo = function (c) {\n    while (++this.index < this.buffer.length + this.offset) {\n      if (this.buffer.charCodeAt(this.index - this.offset) === c) {\n        return true;\n      }\n    }\n    /*\n     * We increment the index at the end of the `parse` loop,\n     * so set it to `buffer.length - 1` here.\n     *\n     * TODO: Refactor `parse` to increment index before calling states.\n     */\n    this.index = this.buffer.length + this.offset - 1;\n    return false;\n  };\n  /**\n   * Comments and CDATA end with `-->` and `]]>`.\n   *\n   * Their common qualities are:\n   * - Their end sequences have a distinct character they start with.\n   * - That character is then repeated, so we have to check multiple repeats.\n   * - All characters but the start character of the sequence can be skipped.\n   */\n  Tokenizer.prototype.stateInCommentLike = function (c) {\n    if (c === this.currentSequence[this.sequenceIndex]) {\n      if (++this.sequenceIndex === this.currentSequence.length) {\n        if (this.currentSequence === Sequences.CdataEnd) {\n          this.cbs.oncdata(this.sectionStart, this.index, 2);\n        } else {\n          this.cbs.oncomment(this.sectionStart, this.index, 2);\n        }\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n        this.state = State.Text;\n      }\n    } else if (this.sequenceIndex === 0) {\n      // Fast-forward to the first character of the sequence\n      if (this.fastForwardTo(this.currentSequence[0])) {\n        this.sequenceIndex = 1;\n      }\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n      // Allow long sequences, eg. --->, ]]]>\n      this.sequenceIndex = 0;\n    }\n  };\n  /**\n   * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n   *\n   * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n   * We allow anything that wouldn't end the tag.\n   */\n  Tokenizer.prototype.isTagStartChar = function (c) {\n    return this.xmlMode ? !isEndOfTagSection(c) : isASCIIAlpha(c);\n  };\n  Tokenizer.prototype.startSpecial = function (sequence, offset) {\n    this.isSpecial = true;\n    this.currentSequence = sequence;\n    this.sequenceIndex = offset;\n    this.state = State.SpecialStartSequence;\n  };\n  Tokenizer.prototype.stateBeforeTagName = function (c) {\n    if (c === CharCodes.ExclamationMark) {\n      this.state = State.BeforeDeclaration;\n      this.sectionStart = this.index + 1;\n    } else if (c === CharCodes.Questionmark) {\n      this.state = State.InProcessingInstruction;\n      this.sectionStart = this.index + 1;\n    } else if (this.isTagStartChar(c)) {\n      var lower = c | 0x20;\n      this.sectionStart = this.index;\n      if (!this.xmlMode && lower === Sequences.TitleEnd[2]) {\n        this.startSpecial(Sequences.TitleEnd, 3);\n      } else {\n        this.state = !this.xmlMode && lower === Sequences.ScriptEnd[2] ? State.BeforeSpecialS : State.InTagName;\n      }\n    } else if (c === CharCodes.Slash) {\n      this.state = State.BeforeClosingTagName;\n    } else {\n      this.state = State.Text;\n      this.stateText(c);\n    }\n  };\n  Tokenizer.prototype.stateInTagName = function (c) {\n    if (isEndOfTagSection(c)) {\n      this.cbs.onopentagname(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    }\n  };\n  Tokenizer.prototype.stateBeforeClosingTagName = function (c) {\n    if (isWhitespace(c)) {\n      // Ignore\n    } else if (c === CharCodes.Gt) {\n      this.state = State.Text;\n    } else {\n      this.state = this.isTagStartChar(c) ? State.InClosingTagName : State.InSpecialComment;\n      this.sectionStart = this.index;\n    }\n  };\n  Tokenizer.prototype.stateInClosingTagName = function (c) {\n    if (c === CharCodes.Gt || isWhitespace(c)) {\n      this.cbs.onclosetag(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = State.AfterClosingTagName;\n      this.stateAfterClosingTagName(c);\n    }\n  };\n  Tokenizer.prototype.stateAfterClosingTagName = function (c) {\n    // Skip everything until \">\"\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  };\n  Tokenizer.prototype.stateBeforeAttributeName = function (c) {\n    if (c === CharCodes.Gt) {\n      this.cbs.onopentagend(this.index);\n      if (this.isSpecial) {\n        this.state = State.InSpecialTag;\n        this.sequenceIndex = 0;\n      } else {\n        this.state = State.Text;\n      }\n      this.baseState = this.state;\n      this.sectionStart = this.index + 1;\n    } else if (c === CharCodes.Slash) {\n      this.state = State.InSelfClosingTag;\n    } else if (!isWhitespace(c)) {\n      this.state = State.InAttributeName;\n      this.sectionStart = this.index;\n    }\n  };\n  Tokenizer.prototype.stateInSelfClosingTag = function (c) {\n    if (c === CharCodes.Gt) {\n      this.cbs.onselfclosingtag(this.index);\n      this.state = State.Text;\n      this.baseState = State.Text;\n      this.sectionStart = this.index + 1;\n      this.isSpecial = false; // Reset special state, in case of self-closing special tags\n    } else if (!isWhitespace(c)) {\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    }\n  };\n  Tokenizer.prototype.stateInAttributeName = function (c) {\n    if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n      this.cbs.onattribname(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = State.AfterAttributeName;\n      this.stateAfterAttributeName(c);\n    }\n  };\n  Tokenizer.prototype.stateAfterAttributeName = function (c) {\n    if (c === CharCodes.Eq) {\n      this.state = State.BeforeAttributeValue;\n    } else if (c === CharCodes.Slash || c === CharCodes.Gt) {\n      this.cbs.onattribend(QuoteType.NoValue, this.index);\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    } else if (!isWhitespace(c)) {\n      this.cbs.onattribend(QuoteType.NoValue, this.index);\n      this.state = State.InAttributeName;\n      this.sectionStart = this.index;\n    }\n  };\n  Tokenizer.prototype.stateBeforeAttributeValue = function (c) {\n    if (c === CharCodes.DoubleQuote) {\n      this.state = State.InAttributeValueDq;\n      this.sectionStart = this.index + 1;\n    } else if (c === CharCodes.SingleQuote) {\n      this.state = State.InAttributeValueSq;\n      this.sectionStart = this.index + 1;\n    } else if (!isWhitespace(c)) {\n      this.sectionStart = this.index;\n      this.state = State.InAttributeValueNq;\n      this.stateInAttributeValueNoQuotes(c); // Reconsume token\n    }\n  };\n\n  Tokenizer.prototype.handleInAttributeValue = function (c, quote) {\n    if (c === quote || !this.decodeEntities && this.fastForwardTo(quote)) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(quote === CharCodes.DoubleQuote ? QuoteType.Double : QuoteType.Single, this.index);\n      this.state = State.BeforeAttributeName;\n    } else if (this.decodeEntities && c === CharCodes.Amp) {\n      this.baseState = this.state;\n      this.state = State.BeforeEntity;\n    }\n  };\n  Tokenizer.prototype.stateInAttributeValueDoubleQuotes = function (c) {\n    this.handleInAttributeValue(c, CharCodes.DoubleQuote);\n  };\n  Tokenizer.prototype.stateInAttributeValueSingleQuotes = function (c) {\n    this.handleInAttributeValue(c, CharCodes.SingleQuote);\n  };\n  Tokenizer.prototype.stateInAttributeValueNoQuotes = function (c) {\n    if (isWhitespace(c) || c === CharCodes.Gt) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(QuoteType.Unquoted, this.index);\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    } else if (this.decodeEntities && c === CharCodes.Amp) {\n      this.baseState = this.state;\n      this.state = State.BeforeEntity;\n    }\n  };\n  Tokenizer.prototype.stateBeforeDeclaration = function (c) {\n    if (c === CharCodes.OpeningSquareBracket) {\n      this.state = State.CDATASequence;\n      this.sequenceIndex = 0;\n    } else {\n      this.state = c === CharCodes.Dash ? State.BeforeComment : State.InDeclaration;\n    }\n  };\n  Tokenizer.prototype.stateInDeclaration = function (c) {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.cbs.ondeclaration(this.sectionStart, this.index);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  };\n  Tokenizer.prototype.stateInProcessingInstruction = function (c) {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  };\n  Tokenizer.prototype.stateBeforeComment = function (c) {\n    if (c === CharCodes.Dash) {\n      this.state = State.InCommentLike;\n      this.currentSequence = Sequences.CommentEnd;\n      // Allow short comments (eg. <!-->)\n      this.sequenceIndex = 2;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = State.InDeclaration;\n    }\n  };\n  Tokenizer.prototype.stateInSpecialComment = function (c) {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.cbs.oncomment(this.sectionStart, this.index, 0);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  };\n  Tokenizer.prototype.stateBeforeSpecialS = function (c) {\n    var lower = c | 0x20;\n    if (lower === Sequences.ScriptEnd[3]) {\n      this.startSpecial(Sequences.ScriptEnd, 4);\n    } else if (lower === Sequences.StyleEnd[3]) {\n      this.startSpecial(Sequences.StyleEnd, 4);\n    } else {\n      this.state = State.InTagName;\n      this.stateInTagName(c); // Consume the token again\n    }\n  };\n\n  Tokenizer.prototype.stateBeforeEntity = function (c) {\n    // Start excess with 1 to include the '&'\n    this.entityExcess = 1;\n    this.entityResult = 0;\n    if (c === CharCodes.Num) {\n      this.state = State.BeforeNumericEntity;\n    } else if (c === CharCodes.Amp) {\n      // We have two `&` characters in a row. Stay in the current state.\n    } else {\n      this.trieIndex = 0;\n      this.trieCurrent = this.entityTrie[0];\n      this.state = State.InNamedEntity;\n      this.stateInNamedEntity(c);\n    }\n  };\n  Tokenizer.prototype.stateInNamedEntity = function (c) {\n    this.entityExcess += 1;\n    this.trieIndex = (0, decode_js_1.determineBranch)(this.entityTrie, this.trieCurrent, this.trieIndex + 1, c);\n    if (this.trieIndex < 0) {\n      this.emitNamedEntity();\n      this.index--;\n      return;\n    }\n    this.trieCurrent = this.entityTrie[this.trieIndex];\n    var masked = this.trieCurrent & decode_js_1.BinTrieFlags.VALUE_LENGTH;\n    // If the branch is a value, store it and continue\n    if (masked) {\n      // The mask is the number of bytes of the value, including the current byte.\n      var valueLength = (masked >> 14) - 1;\n      // If we have a legacy entity while parsing strictly, just skip the number of bytes\n      if (!this.allowLegacyEntity() && c !== CharCodes.Semi) {\n        this.trieIndex += valueLength;\n      } else {\n        // Add 1 as we have already incremented the excess\n        var entityStart = this.index - this.entityExcess + 1;\n        if (entityStart > this.sectionStart) {\n          this.emitPartial(this.sectionStart, entityStart);\n        }\n        // If this is a surrogate pair, consume the next two bytes\n        this.entityResult = this.trieIndex;\n        this.trieIndex += valueLength;\n        this.entityExcess = 0;\n        this.sectionStart = this.index + 1;\n        if (valueLength === 0) {\n          this.emitNamedEntity();\n        }\n      }\n    }\n  };\n  Tokenizer.prototype.emitNamedEntity = function () {\n    this.state = this.baseState;\n    if (this.entityResult === 0) {\n      return;\n    }\n    var valueLength = (this.entityTrie[this.entityResult] & decode_js_1.BinTrieFlags.VALUE_LENGTH) >> 14;\n    switch (valueLength) {\n      case 1:\n        this.emitCodePoint(this.entityTrie[this.entityResult] & ~decode_js_1.BinTrieFlags.VALUE_LENGTH);\n        break;\n      case 2:\n        this.emitCodePoint(this.entityTrie[this.entityResult + 1]);\n        break;\n      case 3:\n        {\n          this.emitCodePoint(this.entityTrie[this.entityResult + 1]);\n          this.emitCodePoint(this.entityTrie[this.entityResult + 2]);\n        }\n    }\n  };\n  Tokenizer.prototype.stateBeforeNumericEntity = function (c) {\n    if ((c | 0x20) === CharCodes.LowerX) {\n      this.entityExcess++;\n      this.state = State.InHexEntity;\n    } else {\n      this.state = State.InNumericEntity;\n      this.stateInNumericEntity(c);\n    }\n  };\n  Tokenizer.prototype.emitNumericEntity = function (strict) {\n    var entityStart = this.index - this.entityExcess - 1;\n    var numberStart = entityStart + 2 + Number(this.state === State.InHexEntity);\n    if (numberStart !== this.index) {\n      // Emit leading data if any\n      if (entityStart > this.sectionStart) {\n        this.emitPartial(this.sectionStart, entityStart);\n      }\n      this.sectionStart = this.index + Number(strict);\n      this.emitCodePoint((0, decode_js_1.replaceCodePoint)(this.entityResult));\n    }\n    this.state = this.baseState;\n  };\n  Tokenizer.prototype.stateInNumericEntity = function (c) {\n    if (c === CharCodes.Semi) {\n      this.emitNumericEntity(true);\n    } else if (isNumber(c)) {\n      this.entityResult = this.entityResult * 10 + (c - CharCodes.Zero);\n      this.entityExcess++;\n    } else {\n      if (this.allowLegacyEntity()) {\n        this.emitNumericEntity(false);\n      } else {\n        this.state = this.baseState;\n      }\n      this.index--;\n    }\n  };\n  Tokenizer.prototype.stateInHexEntity = function (c) {\n    if (c === CharCodes.Semi) {\n      this.emitNumericEntity(true);\n    } else if (isNumber(c)) {\n      this.entityResult = this.entityResult * 16 + (c - CharCodes.Zero);\n      this.entityExcess++;\n    } else if (isHexDigit(c)) {\n      this.entityResult = this.entityResult * 16 + ((c | 0x20) - CharCodes.LowerA + 10);\n      this.entityExcess++;\n    } else {\n      if (this.allowLegacyEntity()) {\n        this.emitNumericEntity(false);\n      } else {\n        this.state = this.baseState;\n      }\n      this.index--;\n    }\n  };\n  Tokenizer.prototype.allowLegacyEntity = function () {\n    return !this.xmlMode && (this.baseState === State.Text || this.baseState === State.InSpecialTag);\n  };\n  /**\n   * Remove data that has already been consumed from the buffer.\n   */\n  Tokenizer.prototype.cleanup = function () {\n    // If we are inside of text or attributes, emit what we already have.\n    if (this.running && this.sectionStart !== this.index) {\n      if (this.state === State.Text || this.state === State.InSpecialTag && this.sequenceIndex === 0) {\n        this.cbs.ontext(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      } else if (this.state === State.InAttributeValueDq || this.state === State.InAttributeValueSq || this.state === State.InAttributeValueNq) {\n        this.cbs.onattribdata(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      }\n    }\n  };\n  Tokenizer.prototype.shouldContinue = function () {\n    return this.index < this.buffer.length + this.offset && this.running;\n  };\n  /**\n   * Iterates through the buffer, calling the function corresponding to the current state.\n   *\n   * States that are more likely to be hit are higher up, as a performance improvement.\n   */\n  Tokenizer.prototype.parse = function () {\n    while (this.shouldContinue()) {\n      var c = this.buffer.charCodeAt(this.index - this.offset);\n      if (this.state === State.Text) {\n        this.stateText(c);\n      } else if (this.state === State.SpecialStartSequence) {\n        this.stateSpecialStartSequence(c);\n      } else if (this.state === State.InSpecialTag) {\n        this.stateInSpecialTag(c);\n      } else if (this.state === State.CDATASequence) {\n        this.stateCDATASequence(c);\n      } else if (this.state === State.InAttributeValueDq) {\n        this.stateInAttributeValueDoubleQuotes(c);\n      } else if (this.state === State.InAttributeName) {\n        this.stateInAttributeName(c);\n      } else if (this.state === State.InCommentLike) {\n        this.stateInCommentLike(c);\n      } else if (this.state === State.InSpecialComment) {\n        this.stateInSpecialComment(c);\n      } else if (this.state === State.BeforeAttributeName) {\n        this.stateBeforeAttributeName(c);\n      } else if (this.state === State.InTagName) {\n        this.stateInTagName(c);\n      } else if (this.state === State.InClosingTagName) {\n        this.stateInClosingTagName(c);\n      } else if (this.state === State.BeforeTagName) {\n        this.stateBeforeTagName(c);\n      } else if (this.state === State.AfterAttributeName) {\n        this.stateAfterAttributeName(c);\n      } else if (this.state === State.InAttributeValueSq) {\n        this.stateInAttributeValueSingleQuotes(c);\n      } else if (this.state === State.BeforeAttributeValue) {\n        this.stateBeforeAttributeValue(c);\n      } else if (this.state === State.BeforeClosingTagName) {\n        this.stateBeforeClosingTagName(c);\n      } else if (this.state === State.AfterClosingTagName) {\n        this.stateAfterClosingTagName(c);\n      } else if (this.state === State.BeforeSpecialS) {\n        this.stateBeforeSpecialS(c);\n      } else if (this.state === State.InAttributeValueNq) {\n        this.stateInAttributeValueNoQuotes(c);\n      } else if (this.state === State.InSelfClosingTag) {\n        this.stateInSelfClosingTag(c);\n      } else if (this.state === State.InDeclaration) {\n        this.stateInDeclaration(c);\n      } else if (this.state === State.BeforeDeclaration) {\n        this.stateBeforeDeclaration(c);\n      } else if (this.state === State.BeforeComment) {\n        this.stateBeforeComment(c);\n      } else if (this.state === State.InProcessingInstruction) {\n        this.stateInProcessingInstruction(c);\n      } else if (this.state === State.InNamedEntity) {\n        this.stateInNamedEntity(c);\n      } else if (this.state === State.BeforeEntity) {\n        this.stateBeforeEntity(c);\n      } else if (this.state === State.InHexEntity) {\n        this.stateInHexEntity(c);\n      } else if (this.state === State.InNumericEntity) {\n        this.stateInNumericEntity(c);\n      } else {\n        // `this._state === State.BeforeNumericEntity`\n        this.stateBeforeNumericEntity(c);\n      }\n      this.index++;\n    }\n    this.cleanup();\n  };\n  Tokenizer.prototype.finish = function () {\n    if (this.state === State.InNamedEntity) {\n      this.emitNamedEntity();\n    }\n    // If there is remaining data, emit it in a reasonable way\n    if (this.sectionStart < this.index) {\n      this.handleTrailingData();\n    }\n    this.cbs.onend();\n  };\n  /** Handle any trailing data. */\n  Tokenizer.prototype.handleTrailingData = function () {\n    var endIndex = this.buffer.length + this.offset;\n    if (this.state === State.InCommentLike) {\n      if (this.currentSequence === Sequences.CdataEnd) {\n        this.cbs.oncdata(this.sectionStart, endIndex, 0);\n      } else {\n        this.cbs.oncomment(this.sectionStart, endIndex, 0);\n      }\n    } else if (this.state === State.InNumericEntity && this.allowLegacyEntity()) {\n      this.emitNumericEntity(false);\n      // All trailing data will have been consumed\n    } else if (this.state === State.InHexEntity && this.allowLegacyEntity()) {\n      this.emitNumericEntity(false);\n      // All trailing data will have been consumed\n    } else if (this.state === State.InTagName || this.state === State.BeforeAttributeName || this.state === State.BeforeAttributeValue || this.state === State.AfterAttributeName || this.state === State.InAttributeName || this.state === State.InAttributeValueSq || this.state === State.InAttributeValueDq || this.state === State.InAttributeValueNq || this.state === State.InClosingTagName) {\n      /*\n       * If we are currently in an opening or closing tag, us not calling the\n       * respective callback signals that the tag should be ignored.\n       */\n    } else {\n      this.cbs.ontext(this.sectionStart, endIndex);\n    }\n  };\n  Tokenizer.prototype.emitPartial = function (start, endIndex) {\n    if (this.baseState !== State.Text && this.baseState !== State.InSpecialTag) {\n      this.cbs.onattribdata(start, endIndex);\n    } else {\n      this.cbs.ontext(start, endIndex);\n    }\n  };\n  Tokenizer.prototype.emitCodePoint = function (cp) {\n    if (this.baseState !== State.Text && this.baseState !== State.InSpecialTag) {\n      this.cbs.onattribentity(cp);\n    } else {\n      this.cbs.ontextentity(cp);\n    }\n  };\n  return Tokenizer;\n}();\nexports.default = Tokenizer;","map":{"version":3,"mappings":"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","names":["CharCodes","State","isWhitespace","c","Space","NewLine","Tab","FormFeed","CarriageReturn","isEndOfTagSection","Slash","Gt","isNumber","Zero","Nine","isASCIIAlpha","LowerA","LowerZ","UpperA","UpperZ","isHexDigit","UpperF","LowerF","QuoteType","exports","Sequences","Cdata","Uint8Array","CdataEnd","CommentEnd","ScriptEnd","StyleEnd","TitleEnd","_a","cbs","_b","xmlMode","_c","decodeEntities","Text","entityTrie","decode_js_1","Tokenizer","state","buffer","sectionStart","index","baseState","currentSequence","undefined","running","offset","chunk","length","parse","finish","Lt","fastForwardTo","ontext","BeforeTagName","Amp","BeforeEntity","isEnd","sequenceIndex","isMatch","isSpecial","InTagName","stateInTagName","endOfText","actualIndex","stateInClosingTagName","Number","InCommentLike","InDeclaration","stateInDeclaration","charCodeAt","oncdata","oncomment","sequence","SpecialStartSequence","ExclamationMark","BeforeDeclaration","Questionmark","InProcessingInstruction","isTagStartChar","lower","startSpecial","BeforeSpecialS","BeforeClosingTagName","stateText","onopentagname","BeforeAttributeName","stateBeforeAttributeName","InClosingTagName","InSpecialComment","onclosetag","AfterClosingTagName","stateAfterClosingTagName","onopentagend","InSpecialTag","InSelfClosingTag","InAttributeName","onselfclosingtag","Eq","onattribname","AfterAttributeName","stateAfterAttributeName","BeforeAttributeValue","onattribend","NoValue","DoubleQuote","InAttributeValueDq","SingleQuote","InAttributeValueSq","InAttributeValueNq","stateInAttributeValueNoQuotes","quote","onattribdata","Double","Single","handleInAttributeValue","Unquoted","OpeningSquareBracket","CDATASequence","Dash","BeforeComment","ondeclaration","onprocessinginstruction","entityExcess","entityResult","Num","BeforeNumericEntity","trieIndex","trieCurrent","InNamedEntity","stateInNamedEntity","emitNamedEntity","masked","VALUE_LENGTH","valueLength","allowLegacyEntity","Semi","entityStart","emitPartial","emitCodePoint","LowerX","InHexEntity","InNumericEntity","stateInNumericEntity","strict","numberStart","emitNumericEntity","shouldContinue","stateSpecialStartSequence","stateInSpecialTag","stateCDATASequence","stateInAttributeValueDoubleQuotes","stateInAttributeName","stateInCommentLike","stateInSpecialComment","stateBeforeTagName","stateInAttributeValueSingleQuotes","stateBeforeAttributeValue","stateBeforeClosingTagName","stateBeforeSpecialS","stateInSelfClosingTag","stateBeforeDeclaration","stateBeforeComment","stateInProcessingInstruction","stateBeforeEntity","stateInHexEntity","stateBeforeNumericEntity","cleanup","handleTrailingData","onend","endIndex","start","cp","onattribentity","ontextentity"],"sources":["https://raw.githubusercontent.com/fb55/htmlparser2/4763205746cd80120b5d2b69041197a394d24ba9/src/Tokenizer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}