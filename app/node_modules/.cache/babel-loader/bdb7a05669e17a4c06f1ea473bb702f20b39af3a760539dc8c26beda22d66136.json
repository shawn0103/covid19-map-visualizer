{"ast":null,"code":"'use strict';\n\nconst HtmlParser = require('htmlparser2').Parser;\nconst DomHandler = require('domhandler').DomHandler;\nconst ProcessingInstructions = require('./processing-instructions');\nconst IsValidNodeDefinitions = require('./is-valid-node-definitions');\nconst utils = require('./utils');\nfunction Html2ReactParser(options) {\n  function parseHtmlToTree(html) {\n    options = options || {};\n    options.decodeEntities = true;\n    const handler = new DomHandler();\n    const parser = new HtmlParser(handler, options);\n    parser.parseComplete(html);\n    return handler.dom.filter(function (element) {\n      return element.type !== 'directive';\n    });\n  }\n  ;\n  function traverseDom(node, isValidNode, processingInstructions, preprocessingInstructions, index) {\n    if (isValidNode(node)) {\n      (preprocessingInstructions || []).forEach(instruction => {\n        if (instruction.shouldPreprocessNode(node)) {\n          instruction.preprocessNode(node, index);\n        }\n      });\n      const processingInstruction = (processingInstructions || []).find(instruction => {\n        return instruction.shouldProcessNode(node);\n      });\n      if (processingInstruction != null) {\n        const children = (node.children || []).map((child, i) => {\n          return traverseDom(child, isValidNode, processingInstructions, preprocessingInstructions, i);\n        }).filter(child => {\n          return child != null && child !== false;\n        });\n        if (processingInstruction.replaceChildren) {\n          return utils.createElement(node, index, node.data, [processingInstruction.processNode(node, children, index)]);\n        } else {\n          return processingInstruction.processNode(node, children, index);\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n  ;\n  function parseWithInstructions(html, isValidNode, processingInstructions, preprocessingInstructions) {\n    const domTree = parseHtmlToTree(html);\n    const list = domTree.map(function (domTreeItem, index) {\n      return traverseDom(domTreeItem, isValidNode, processingInstructions, preprocessingInstructions, index);\n    });\n    return list.length <= 1 ? list[0] : list;\n  }\n  ;\n  function parse(html) {\n    const processingInstructions = new ProcessingInstructions();\n    return parseWithInstructions(html, IsValidNodeDefinitions.alwaysValid, processingInstructions.defaultProcessingInstructions);\n  }\n  ;\n  return {\n    parse: parse,\n    parseWithInstructions: parseWithInstructions\n  };\n}\n;\nmodule.exports = Html2ReactParser;","map":{"version":3,"names":["HtmlParser","require","Parser","DomHandler","ProcessingInstructions","IsValidNodeDefinitions","utils","Html2ReactParser","options","parseHtmlToTree","html","decodeEntities","handler","parser","parseComplete","dom","filter","element","type","traverseDom","node","isValidNode","processingInstructions","preprocessingInstructions","index","forEach","instruction","shouldPreprocessNode","preprocessNode","processingInstruction","find","shouldProcessNode","children","map","child","i","replaceChildren","createElement","data","processNode","parseWithInstructions","domTree","list","domTreeItem","length","parse","alwaysValid","defaultProcessingInstructions","module","exports"],"sources":["/Users/shawn/Documents/GitHub/covid19-map-visualizer/app/node_modules/html-to-react/lib/parser.js"],"sourcesContent":["'use strict';\nconst HtmlParser = require('htmlparser2').Parser;\nconst DomHandler = require('domhandler').DomHandler;\nconst ProcessingInstructions = require('./processing-instructions');\nconst IsValidNodeDefinitions = require('./is-valid-node-definitions');\nconst utils = require('./utils');\n\nfunction Html2ReactParser(options) {\n  function parseHtmlToTree(html) {\n    options = options || {};\n    options.decodeEntities = true;\n    const handler = new DomHandler();\n    const parser = new HtmlParser(handler, options);\n    parser.parseComplete(html);\n    return handler.dom.filter(function (element) {\n      return element.type !== 'directive';\n    });\n  };\n\n  function traverseDom(node, isValidNode, processingInstructions, preprocessingInstructions,\n    index) {\n    if (isValidNode(node)) {\n      (preprocessingInstructions || []).forEach((instruction) => {\n        if (instruction.shouldPreprocessNode(node)) {\n          instruction.preprocessNode(node, index);\n        }\n      });\n\n      const processingInstruction = (processingInstructions || []).find((instruction) => {\n        return instruction.shouldProcessNode(node);\n      });\n      if (processingInstruction != null) {\n        const children = (node.children || []).map((child, i) => {\n          return traverseDom(child, isValidNode, processingInstructions,\n            preprocessingInstructions, i);\n        }).filter((child) => {\n          return child != null && child !== false;\n        });\n\n        if (processingInstruction.replaceChildren) {\n          return utils.createElement(node, index, node.data, [\n            processingInstruction.processNode(node, children, index),\n          ]);\n        } else {\n          return processingInstruction.processNode(node, children, index);\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  };\n\n  function parseWithInstructions(html, isValidNode, processingInstructions,\n      preprocessingInstructions) {\n    const domTree = parseHtmlToTree(html);\n    const list = domTree.map(function (domTreeItem, index) {\n      return traverseDom(domTreeItem, isValidNode, processingInstructions,\n        preprocessingInstructions, index);\n    });\n    return list.length <= 1 ? list[0] : list;\n  };\n\n  function parse(html) {\n    const processingInstructions = new ProcessingInstructions();\n    return parseWithInstructions(html,\n      IsValidNodeDefinitions.alwaysValid,\n      processingInstructions.defaultProcessingInstructions);\n  };\n\n  return {\n    parse: parse,\n    parseWithInstructions: parseWithInstructions,\n  };\n};\n\nmodule.exports = Html2ReactParser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}