{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.innerText = exports.textContent = exports.getText = exports.getInnerHTML = exports.getOuterHTML = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar dom_serializer_1 = __importDefault(require(\"dom-serializer\"));\nvar domelementtype_1 = require(\"domelementtype\");\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @returns `node`'s outer HTML.\n */\nfunction getOuterHTML(node, options) {\n  return (0, dom_serializer_1.default)(node, options);\n}\nexports.getOuterHTML = getOuterHTML;\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @returns `node`'s inner HTML.\n */\nfunction getInnerHTML(node, options) {\n  return (0, domhandler_1.hasChildren)(node) ? node.children.map(function (node) {\n    return getOuterHTML(node, options);\n  }).join(\"\") : \"\";\n}\nexports.getInnerHTML = getInnerHTML;\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags.\n *\n * @category Stringify\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nfunction getText(node) {\n  if (Array.isArray(node)) return node.map(getText).join(\"\");\n  if ((0, domhandler_1.isTag)(node)) return node.name === \"br\" ? \"\\n\" : getText(node.children);\n  if ((0, domhandler_1.isCDATA)(node)) return getText(node.children);\n  if ((0, domhandler_1.isText)(node)) return node.data;\n  return \"\";\n}\nexports.getText = getText;\n/**\n * Get a node's text content.\n *\n * @category Stringify\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nfunction textContent(node) {\n  if (Array.isArray(node)) return node.map(textContent).join(\"\");\n  if ((0, domhandler_1.hasChildren)(node) && !(0, domhandler_1.isComment)(node)) {\n    return textContent(node.children);\n  }\n  if ((0, domhandler_1.isText)(node)) return node.data;\n  return \"\";\n}\nexports.textContent = textContent;\n/**\n * Get a node's inner text.\n *\n * @category Stringify\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nfunction innerText(node) {\n  if (Array.isArray(node)) return node.map(innerText).join(\"\");\n  if ((0, domhandler_1.hasChildren)(node) && (node.type === domelementtype_1.ElementType.Tag || (0, domhandler_1.isCDATA)(node))) {\n    return innerText(node.children);\n  }\n  if ((0, domhandler_1.isText)(node)) return node.data;\n  return \"\";\n}\nexports.innerText = innerText;","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;AAQA;AACA;AAEA;;;;;;;AAOA,SAAgBA,YAAY,CACxBC,IAAkC,EAClCC,OAA8B;EAE9B,OAAO,4BAAU,EAACD,IAAI,EAAEC,OAAO,CAAC;AACpC;AALAC;AAOA;;;;;;;AAOA,SAAgBC,YAAY,CACxBH,IAAa,EACbC,OAA8B;EAE9B,OAAO,4BAAW,EAACD,IAAI,CAAC,GAClBA,IAAI,CAACI,QAAQ,CAACC,GAAG,CAAC,UAACL,IAAI;IAAK,mBAAY,CAACA,IAAI,EAAEC,OAAO,CAAC;EAA3B,CAA2B,CAAC,CAACK,IAAI,CAAC,EAAE,CAAC,GACjE,EAAE;AACZ;AAPAJ;AASA;;;;;;;;AAQA,SAAgBK,OAAO,CAACP,IAAyB;EAC7C,IAAIQ,KAAK,CAACC,OAAO,CAACT,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACK,GAAG,CAACE,OAAO,CAAC,CAACD,IAAI,CAAC,EAAE,CAAC;EAC1D,IAAI,sBAAK,EAACN,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACU,IAAI,KAAK,IAAI,GAAG,IAAI,GAAGH,OAAO,CAACP,IAAI,CAACI,QAAQ,CAAC;EAC1E,IAAI,wBAAO,EAACJ,IAAI,CAAC,EAAE,OAAOO,OAAO,CAACP,IAAI,CAACI,QAAQ,CAAC;EAChD,IAAI,uBAAM,EAACJ,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACW,IAAI;EAClC,OAAO,EAAE;AACb;AANAT;AAQA;;;;;;;;AAQA,SAAgBU,WAAW,CAACZ,IAAyB;EACjD,IAAIQ,KAAK,CAACC,OAAO,CAACT,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACK,GAAG,CAACO,WAAW,CAAC,CAACN,IAAI,CAAC,EAAE,CAAC;EAC9D,IAAI,4BAAW,EAACN,IAAI,CAAC,IAAI,CAAC,0BAAS,EAACA,IAAI,CAAC,EAAE;IACvC,OAAOY,WAAW,CAACZ,IAAI,CAACI,QAAQ,CAAC;;EAErC,IAAI,uBAAM,EAACJ,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACW,IAAI;EAClC,OAAO,EAAE;AACb;AAPAT;AASA;;;;;;;;AAQA,SAAgBW,SAAS,CAACb,IAAyB;EAC/C,IAAIQ,KAAK,CAACC,OAAO,CAACT,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACK,GAAG,CAACQ,SAAS,CAAC,CAACP,IAAI,CAAC,EAAE,CAAC;EAC5D,IAAI,4BAAW,EAACN,IAAI,CAAC,KAAKA,IAAI,CAACc,IAAI,KAAKC,4BAAW,CAACC,GAAG,IAAI,wBAAO,EAAChB,IAAI,CAAC,CAAC,EAAE;IACvE,OAAOa,SAAS,CAACb,IAAI,CAACI,QAAQ,CAAC;;EAEnC,IAAI,uBAAM,EAACJ,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACW,IAAI;EAClC,OAAO,EAAE;AACb;AAPAT","names":["getOuterHTML","node","options","exports","getInnerHTML","children","map","join","getText","Array","isArray","name","data","textContent","innerText","type","domelementtype_1","Tag"],"sources":["https://raw.githubusercontent.com/fb55/domutils/f7e357b5c210b6731c2a60e0b7b3cfaa1f96b706/src/stringify.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}