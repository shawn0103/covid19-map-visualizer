{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prevElementSibling = exports.nextElementSibling = exports.getName = exports.hasAttrib = exports.getAttributeValue = exports.getSiblings = exports.getParent = exports.getChildren = void 0;\nvar domhandler_1 = require(\"domhandler\");\n/**\n * Get a node's children.\n *\n * @category Traversal\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\nfunction getChildren(elem) {\n  return (0, domhandler_1.hasChildren)(elem) ? elem.children : [];\n}\nexports.getChildren = getChildren;\n/**\n * Get a node's parent.\n *\n * @category Traversal\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node.\n */\nfunction getParent(elem) {\n  return elem.parent || null;\n}\nexports.getParent = getParent;\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first. If we don't\n * have a parent (the element is a root node), we walk the element's `prev` &\n * `next` to get all remaining nodes.\n *\n * @category Traversal\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings.\n */\nfunction getSiblings(elem) {\n  var _a, _b;\n  var parent = getParent(elem);\n  if (parent != null) return getChildren(parent);\n  var siblings = [elem];\n  var prev = elem.prev,\n    next = elem.next;\n  while (prev != null) {\n    siblings.unshift(prev);\n    _a = prev, prev = _a.prev;\n  }\n  while (next != null) {\n    siblings.push(next);\n    _b = next, next = _b.next;\n  }\n  return siblings;\n}\nexports.getSiblings = getSiblings;\n/**\n * Gets an attribute from an element.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\nfunction getAttributeValue(elem, name) {\n  var _a;\n  return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\nexports.getAttributeValue = getAttributeValue;\n/**\n * Checks whether an element has an attribute.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\nfunction hasAttrib(elem, name) {\n  return elem.attribs != null && Object.prototype.hasOwnProperty.call(elem.attribs, name) && elem.attribs[name] != null;\n}\nexports.hasAttrib = hasAttrib;\n/**\n * Get the tag name of an element.\n *\n * @category Traversal\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\nfunction getName(elem) {\n  return elem.name;\n}\nexports.getName = getName;\n/**\n * Returns the next element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag.\n */\nfunction nextElementSibling(elem) {\n  var _a;\n  var next = elem.next;\n  while (next !== null && !(0, domhandler_1.isTag)(next)) _a = next, next = _a.next;\n  return next;\n}\nexports.nextElementSibling = nextElementSibling;\n/**\n * Returns the previous element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag.\n */\nfunction prevElementSibling(elem) {\n  var _a;\n  var prev = elem.prev;\n  while (prev !== null && !(0, domhandler_1.isTag)(prev)) _a = prev, prev = _a.prev;\n  return prev;\n}\nexports.prevElementSibling = prevElementSibling;","map":{"version":3,"mappings":";;;;;;AAAA;AASA;;;;;;;AAOA,SAAgBA,WAAW,CAACC,IAAa;EACrC,OAAO,4BAAW,EAACA,IAAI,CAAC,GAAGA,IAAI,CAACC,QAAQ,GAAG,EAAE;AACjD;AAFAC;AAKA;;;;;;;AAOA,SAAgBC,SAAS,CAACH,IAAa;EACnC,OAAOA,IAAI,CAACI,MAAM,IAAI,IAAI;AAC9B;AAFAF;AAIA;;;;;;;;;;;AAWA,SAAgBG,WAAW,CAACL,IAAa;;EACrC,IAAMI,MAAM,GAAGD,SAAS,CAACH,IAAI,CAAC;EAC9B,IAAII,MAAM,IAAI,IAAI,EAAE,OAAOL,WAAW,CAACK,MAAM,CAAC;EAE9C,IAAME,QAAQ,GAAG,CAACN,IAAI,CAAC;EACjB,QAAI,GAAWA,IAAI,KAAf;IAAEO,IAAI,GAAKP,IAAI,KAAT;EAChB,OAAOQ,IAAI,IAAI,IAAI,EAAE;IACjBF,QAAQ,CAACG,OAAO,CAACD,IAAI,CAAC;IACrBE,KAAWF,IAAI,EAAbA,IAAI;;EAEX,OAAOD,IAAI,IAAI,IAAI,EAAE;IACjBD,QAAQ,CAACK,IAAI,CAACJ,IAAI,CAAC;IAClBK,KAAWL,IAAI,EAAbA,IAAI;;EAEX,OAAOD,QAAQ;AACnB;AAfAJ;AAiBA;;;;;;;;AAQA,SAAgBW,iBAAiB,CAC7Bb,IAAa,EACbc,IAAY;;EAEZ,OAAO,UAAI,CAACC,OAAO,0CAAGD,IAAI,CAAC;AAC/B;AALAZ;AAOA;;;;;;;;AAQA,SAAgBc,SAAS,CAAChB,IAAa,EAAEc,IAAY;EACjD,OACId,IAAI,CAACe,OAAO,IAAI,IAAI,IACpBE,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACpB,IAAI,CAACe,OAAO,EAAED,IAAI,CAAC,IACxDd,IAAI,CAACe,OAAO,CAACD,IAAI,CAAC,IAAI,IAAI;AAElC;AANAZ;AAQA;;;;;;;AAOA,SAAgBmB,OAAO,CAACrB,IAAa;EACjC,OAAOA,IAAI,CAACc,IAAI;AACpB;AAFAZ;AAIA;;;;;;;AAOA,SAAgBoB,kBAAkB,CAACtB,IAAa;;EACtC,QAAI,GAAKA,IAAI,KAAT;EACV,OAAOO,IAAI,KAAK,IAAI,IAAI,CAAC,sBAAK,EAACA,IAAI,CAAC,EAAGG,KAAWH,IAAI,EAAbA,IAAI;EAC7C,OAAOA,IAAI;AACf;AAJAL;AAMA;;;;;;;AAOA,SAAgBqB,kBAAkB,CAACvB,IAAa;;EACtC,QAAI,GAAKA,IAAI,KAAT;EACV,OAAOQ,IAAI,KAAK,IAAI,IAAI,CAAC,sBAAK,EAACA,IAAI,CAAC,EAAGE,KAAWF,IAAI,EAAbA,IAAI;EAC7C,OAAOA,IAAI;AACf;AAJAN","names":["getChildren","elem","children","exports","getParent","parent","getSiblings","siblings","next","prev","unshift","_a","push","_b","getAttributeValue","name","attribs","hasAttrib","Object","prototype","hasOwnProperty","call","getName","nextElementSibling","prevElementSibling"],"sources":["https://raw.githubusercontent.com/fb55/domutils/f7e357b5c210b6731c2a60e0b7b3cfaa1f96b706/src/traversal.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}